minio: 
  enabled: true
  image:
    debug: true
  mode: distributed
  auth:
    rootUser: admin
    rootPassword: "root1234"
  # defaultBuckets: "loki-chunks, loki-admin, loki-ruler"
  statefulset:
    ## @param statefulset.podManagementPolicy StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel
    ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
    ##
    podManagementPolicy: Parallel
    ## @param statefulset.replicaCount Number of pods per zone (only for MinIO&reg; distributed mode). Should be even and `>= 4`
    ##
    replicaCount: 2
    ## @param statefulset.zones Number of zones (only for MinIO&reg; distributed mode)
    ##
    zones: 2
    ## @param statefulset.drivesPerNode Number of drives attached to every node (only for MinIO&reg; distributed mode)
    ##
    drivesPerNode: 1
  provisioning:
    enabled: true
    resourcesPreset: "nano"
    buckets:
      - name: loki-chunks
        region: canada
      - name: loki-admin
        region: canada
      - name: loki-ruler
        region: canada
    ## @param provisioning.config MinIO&reg; config provisioning
    ## https://docs.min.io/docs/minio-server-configuration-guide.html
    ## e.g.
    config:
      - name: region
        options:
          name: canada
  
    networkPolicy:
      enabled: false
      allowExternalEgress: true
  automountServiceAccountToken: true
  containerPorts:
    api: 9000
    console: 9001
  podSecurityContext:
    enabled: false
  containerSecurityContext:
    enabled: false
  podAnnotations: {}
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  startupProbe:
    enabled: false
  service:
    type: LoadBalancer
    ports:
      api: 9000
      console: 9001
  ingress:
    enabled: false
    ingressClassName: "network-system-traefik"
    hostname: minio.q.t
    servicePort: minio-console
    tls: false
    selfSigned: false
  apiIngress:
    enabled: false
    ingressClassName: "network-system-traefik"
    hostname: minio-api.q.t
    servicePort: minio-api
    tls: false
    selfSigned: false
  networkPolicy:
    enabled: false
    allowExternal: true
    allowExternalEgress: true
    extraIngress: []
    extraEgress: []
  persistence:
    enabled: true
    storageClass: "nfs"
    mountPath: /bitnami/minio/data
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  volumePermissions:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r32
      digest: ""
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
  pdb:
    create: false
  metrics:
    ## @param metrics.prometheusAuthType Authentication mode for Prometheus (`jwt` or `public`)
    ## To allow public access without authentication for prometheus metrics set environment as follows.
    ##
    prometheusAuthType: public
    ## @param metrics.enabled Enable the export of Prometheus metrics
    ##
    enabled: true
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param metrics.serviceMonitor.enabled If the operator is installed in your cluster, set to true to create a Service Monitor Entry
      ##
      enabled: true
      ## @param metrics.serviceMonitor.namespace Namespace which Prometheus is running in
      ##
      namespace: ""
      ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## DEPRECATED metrics.serviceMonitor.path - please use `metrics.serviceMonitor.paths` instead
      ##
      ## path: /minio/v2/metrics/cluster
      ## @param metrics.serviceMonitor.paths HTTP paths to scrape for metrics
      ##
      paths:
        - /minio/v2/metrics/cluster
        - /minio/v2/metrics/node
      ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
      ##
      interval: 30s
      ## @param metrics.serviceMonitor.scrapeTimeout Specify the timeout after which the scrape is ended
      ## e.g:
      ## scrapeTimeout: 30s
      scrapeTimeout: ""
      ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
      ##
      metricRelabelings: []
      ## @param metrics.serviceMonitor.relabelings Metrics relabelings to add to the scrape endpoint, applied before scraping
      ##
      relabelings: []
      ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
      ##
      honorLabels: false
      ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ##
      selector: {}
      ## @param metrics.serviceMonitor.apiVersion ApiVersion for the serviceMonitor Resource (defaults to "monitoring.coreos.com/v1")
      apiVersion: ""
      ## @param metrics.serviceMonitor.tlsConfig Additional TLS configuration for metrics endpoint with "https" scheme
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.TLSConfig
      tlsConfig: {}
    ## Prometheus Operator PrometheusRule configuration
    ##
    prometheusRule:
      ## @param metrics.prometheusRule.enabled Create a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true` and `metrics.prometheusRule.rules`)
      ##
      enabled: false
      ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)
      ##
      namespace: ""
      ## @param metrics.prometheusRule.additionalLabels Additional labels that can be used so PrometheusRule will be discovered by Prometheus
      ##
      additionalLabels: {}
      ## @param metrics.prometheusRule.rules Prometheus Rule definitions
      # - alert: minio cluster nodes offline
      #   annotations:
      #     summary: "minio cluster nodes offline"
      #     description: "minio cluster nodes offline, pod {{`{{`}} $labels.pod {{`}}`}} service {{`{{`}} $labels.job {{`}}`}} offline"
      #   for: 10m
      #   expr: minio_cluster_nodes_offline_total > 0
      #   labels:
      #     severity: critical
      #     group: PaaS
      ##
      rules: []
