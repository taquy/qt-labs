zipkin:
  enabled: true
  global:
    defaultStorageClass: "longhorn-static"

  fullnameOverride: ""

  ## Enable diagnostic mode in the deployment
  ##
  diagnosticMode:
    ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
    ##
    enabled: false
    ## @param diagnosticMode.command Command to override all containers in the deployment
    ##
    command:
      - sleep
    ## @param diagnosticMode.args Args to override all containers in the deployment
    ##
    args:
      - infinity
  configOverrides: {}

  ## @param secretConfigOverrides Overwrite or add extra configuration options to the chart default (these will be added in a secret)
  ## Example:
  ## secretConfigOverrides:
  ##   CASSANDRA_PASSWORD: test123
  ##
  secretConfigOverrides: {}
  existingConfigmap: ""
  existingSecret: ""

  ## @param javaOpts Set extra Java Options when launching zipkin
  ##
  javaOpts: ""
  image:
    registry: docker.io
    repository: bitnami/zipkin
    tag: 3.4.3-debian-12-r0
  ## @param replicaCount Number of zipkin replicas to deploy
  ##
  replicaCount: 1
  ## @param containerPorts.http zipkin http server container port
  ##
  containerPorts:
    http: 9411
  usePasswordFile: true
  storageType: cassandra3
  tls:
    enabled: false
    usePemCerts: true
    existingSecret: ""
    certFilename: tls.crt
    certKeyFilename: tls.key
    keystoreFilename: zipkin.jks
    password: ""
    passwordSecret: ""
    ## @param tls.autoGenerated.enabled Enable automatic generation of certificates for TLS
    ## @param tls.autoGenerated.engine Mechanism to generate the certificates (allowed values: helm, cert-manager)
    autoGenerated:
      enabled: true
      engine: helm
      certManager:
        existingIssuer: ""
        existingIssuerKind: ""
        keySize: 2048
        keyAlgorithm: RSA
        duration: 2160h
        renewBefore: 360h
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  startupProbe:
    enabled: false
  resourcesPreset: "small"
  service:
    type: ClusterIP
  defaultInitContainers:
    waitForCassandra:
      enabled: true
      resourcesPreset: "nano"
    initCerts:
      enabled: false
      resourcesPreset: "nano"
  externalDatabase:
    host: "cassandra.jaeger-cassandra.svc.cluster.local"
    user: cassandra
    password: ""
    existingSecret: "cassandra-secrets"
    existingSecretPasswordKey: "cassandra-password"
    cluster:
      datacenter: "datacenter1"
    keyspace: "zipkin"
  cassandra:
    enabled: false
