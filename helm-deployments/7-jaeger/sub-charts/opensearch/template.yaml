---
# Source: jaeger-opensearch/charts/opensearch/templates/coordinating/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: jaeger-opensearch-coordinating
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/part-of: opensearch
    app.kubernetes.io/component: coordinating-only
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: coordinating-only
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 9200
        - port: 9300
---
# Source: jaeger-opensearch/charts/opensearch/templates/dashboards/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: jaeger-opensearch-dashboards
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/part-of: opensearch
    app.kubernetes.io/component: dashboards
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: dashboards
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 5601
---
# Source: jaeger-opensearch/charts/opensearch/templates/data/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: jaeger-opensearch-data
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/part-of: opensearch
    app.kubernetes.io/component: data
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: data
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 9200
        - port: 9300
---
# Source: jaeger-opensearch/charts/opensearch/templates/ingest/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: jaeger-opensearch-ingest
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/part-of: opensearch
    app.kubernetes.io/component: ingest
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: ingest
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 9200
        - port: 9300
---
# Source: jaeger-opensearch/charts/opensearch/templates/master/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: jaeger-opensearch-master
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/part-of: opensearch
    app.kubernetes.io/component: master
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: master
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 9200
        - port: 9300
---
# Source: jaeger-opensearch/charts/opensearch/templates/coordinating/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: jaeger-opensearch-coordinating
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: coordinating-only
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: coordinating-only
---
# Source: jaeger-opensearch/charts/opensearch/templates/data/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: jaeger-opensearch-data
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: data
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: data
---
# Source: jaeger-opensearch/charts/opensearch/templates/ingest/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: jaeger-opensearch-ingest
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: ingest
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: ingest
---
# Source: jaeger-opensearch/charts/opensearch/templates/master/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: jaeger-opensearch-master
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: master
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: master
---
# Source: jaeger-opensearch/charts/opensearch-dashboards/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opensearch-dashboard-dashboards
  labels:
    helm.sh/chart: opensearch-dashboards-2.25.0
    app.kubernetes.io/name: opensearch-dashboards
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/version: "2.18.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: jaeger-opensearch/charts/opensearch-dashboards/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: opensearch-dashboard-config
  labels: 
    helm.sh/chart: opensearch-dashboards-2.25.0
    app.kubernetes.io/name: opensearch-dashboards
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/version: "2.18.0"
    app.kubernetes.io/managed-by: Helm
data:
  opensearch: |
    ssl:
      certificateAuthorities: /usr/share/opensearch/certs/ca.crt
  ssl: |
    certificate: /usr/share/dashboards/certs/tls.crt
    enabled: true
    key: /usr/share/dashboards/certs/tls.key
---
# Source: jaeger-opensearch/charts/opensearch-dashboards/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: opensearch-dashboards-2.25.0
    app.kubernetes.io/name: opensearch-dashboards
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/version: "2.18.0"
    app.kubernetes.io/managed-by: Helm
  name: opensearch-dashboard-dashboards-rolebinding
roleRef:
  kind: Role
  name: opensearch-dashboard-dashboards
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: opensearch-dashboard-dashboards
  namespace: jaeger-opensearch
---
# Source: jaeger-opensearch/charts/opensearch-dashboards/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opensearch-dashboard
  labels:
    helm.sh/chart: opensearch-dashboards-2.25.0
    app.kubernetes.io/name: opensearch-dashboards
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/version: "2.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
  - port: 5601
    protocol: TCP
    name: http
    targetPort: 5601
  - name: metrics
    protocol: TCP
    port: 9601
  selector:
    app: opensearch-dashboards
    release: "jaeger-opensearch"
---
# Source: jaeger-opensearch/charts/opensearch/templates/coordinating/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: jaeger-opensearch-coordinating-hl
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: coordinating-only
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
    - name: tcp-transport
      port: 9300
      targetPort: transport
  selector:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/component: coordinating-only
---
# Source: jaeger-opensearch/charts/opensearch/templates/data/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: jaeger-opensearch-data-hl
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: data
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
    - name: tcp-transport
      port: 9300
      targetPort: transport
  selector:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/component: data
---
# Source: jaeger-opensearch/charts/opensearch/templates/ingest/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: jaeger-opensearch-ingest-hl
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: ingest
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
    - name: tcp-transport
      port: 9300
      targetPort: transport
  selector:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/component: ingest
---
# Source: jaeger-opensearch/charts/opensearch/templates/master/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: jaeger-opensearch-master-hl
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
    - name: tcp-transport
      port: 9300
      targetPort: transport
  selector:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/component: master
---
# Source: jaeger-opensearch/charts/opensearch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: jaeger-opensearch
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: coordinating-only
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
    - name: tcp-transport
      port: 9300
  selector:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/component: coordinating-only
---
# Source: jaeger-opensearch/charts/opensearch-dashboards/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opensearch-dashboard
  labels:
    helm.sh/chart: opensearch-dashboards-2.25.0
    app.kubernetes.io/name: opensearch-dashboards
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/version: "2.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: opensearch-dashboards
      release: "jaeger-opensearch"
  template:
    metadata:
      labels:
        app: opensearch-dashboards
        release: "jaeger-opensearch"
      annotations:
        configchecksum: 17a12c5f8429b12efb74f04d4cd2eb20fc43f3f446bbff1df67423ed8da5ddb
    spec:
      securityContext:
        {}
      serviceAccountName: opensearch-dashboard-dashboards
      volumes:
        - name: opensearch-dashboard-tls-keypair
          secret:
            secretName: opensearch-dashboard-tls-keypair
        - name: opensearch-admin-tls-keypair
          secret:
            secretName: opensearch-admin-tls-keypair
        - name: config
          configMap:
            name: opensearch-dashboard-config
      containers:
      - name: dashboards
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "opensearchproject/opensearch-dashboards:2.18.0"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          failureThreshold: 10
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: 5601
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 10
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: 5601
          timeoutSeconds: 5
        startupProbe:
          failureThreshold: 20
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5601
          timeoutSeconds: 5
        env:
        - name: OPENSEARCH_HOSTS
          value: "https://jaeger-opensearch:9200"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: OPENSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: opensearch-secrets
              key: username
        - name: OPENSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opensearch-secrets
              key: password
        - name: COOKIE_PASS
          valueFrom:
            secretKeyRef:
              name: opensearch-secrets
              key: cookie
        ports:
        - containerPort: 5601
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 512M
          requests:
            cpu: 100m
            memory: 512M
        volumeMounts:
          - name: opensearch-dashboard-tls-keypair
            mountPath: /usr/share/dashboards/certs
          - name: opensearch-admin-tls-keypair
            mountPath: /usr/share/opensearch/certs
          - name: config
            mountPath: /usr/share/opensearch-dashboards/config/opensearch
            subPath: opensearch
          - name: config
            mountPath: /usr/share/opensearch-dashboards/config/ssl
            subPath: ssl
---
# Source: jaeger-opensearch/charts/opensearch/templates/coordinating/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jaeger-opensearch-coordinating
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: coordinating-only
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: coordinating-only
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: coordinating-only
  updateStrategy:
    type: RollingUpdate
  serviceName: jaeger-opensearch-coordinating-hl
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: jaeger-opensearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/version: 2.18.0
        helm.sh/chart: opensearch-1.4.0
        app.kubernetes.io/component: coordinating-only
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: coordinating-only
      annotations:
    spec:
      serviceAccountName: default
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/os-shell:12-debian-12-r32
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
                      CURRENT=`sysctl -n vm.max_map_count`;
                      DESIRED="262144";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w vm.max_map_count=262144;
                      fi;
                      CURRENT=`sysctl -n fs.file-max`;
                      DESIRED="65536";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w fs.file-max=65536;
                      fi;
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
                    limits:
                      cpu: 150m
                      ephemeral-storage: 2Gi
                      memory: 192Mi
                    requests:
                      cpu: 100m
                      ephemeral-storage: 50Mi
                      memory: 128Mi
        
        - name: copy-default-plugins
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                      - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsGroup: 1001
                    runAsNonRoot: true
                    runAsUser: 1001
                    seLinuxOptions: {}
                    seccompProfile:
                      type: RuntimeDefault
          resources:
                    limits:
                      cpu: 750m
                      ephemeral-storage: 2Gi
                      memory: 768Mi
                    requests:
                      cpu: 500m
                      ephemeral-storage: 50Mi
                      memory: 512Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
                . /opt/bitnami/scripts/liblog.sh
                . /opt/bitnami/scripts/libfs.sh
                . /opt/bitnami/scripts/opensearch-env.sh
        
                mkdir -p /emptydir/app-conf-dir /emptydir/app-plugins-dir
                info "Copying directories to empty dir"
        
                if ! is_dir_empty "$DB_DEFAULT_CONF_DIR"; then
                    info "Copying default configuration"
                    cp -nr --preserve=mode "$DB_DEFAULT_CONF_DIR"/* /emptydir/app-conf-dir
                fi
                if ! is_dir_empty "$DB_DEFAULT_PLUGINS_DIR"; then
                    info "Copying default plugins"
                    cp -nr "$DB_DEFAULT_PLUGINS_DIR"/* /emptydir/app-plugins-dir
                fi
        
                info "Copy operation completed"
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
      containers:
        - name: opensearch
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: OPENSEARCH_CLUSTER_NAME
              value: "jaeger"
            - name: OPENSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: OPENSEARCH_NODE_ROLES
              value: ""
            - name: OPENSEARCH_TRANSPORT_PORT_NUMBER
              value: "9300"
            - name: OPENSEARCH_HTTP_PORT_NUMBER
              value: "9200"
            - name: OPENSEARCH_CLUSTER_HOSTS
              value: "jaeger-opensearch-master-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-coordinating-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-data-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-ingest-hl.jaeger-opensearch.svc.cluster.local,"
            - name: OPENSEARCH_TOTAL_NODES
              value: "4"
            - name: OPENSEARCH_CLUSTER_MASTER_HOSTS
              value: jaeger-opensearch-master-0 jaeger-opensearch-master-1 
            - name: OPENSEARCH_MINIMUM_MASTER_NODES
              value: "2"
            - name: OPENSEARCH_ADVERTISED_HOSTNAME
              value: "$(MY_POD_NAME).jaeger-opensearch-coordinating-hl.jaeger-opensearch.svc.cluster.local"
            - name: OPENSEARCH_HEAP_SIZE
              value: "128m"
            
            - name: OPENSEARCH_SECURITY_NODES_DN
              value: CN=jaeger-opensearch-master;CN=jaeger-opensearch-data;CN=jaeger-opensearch-coordinating;CN=jaeger-opensearch-ingest
            - name: OPENSEARCH_SECURITY_ADMIN_DN
              value: CN=admin;CN=admin
            - name: OPENSEARCH_ENABLE_SECURITY
              value: "true"
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-password
            - name: OPENSEARCH_DASHBOARDS_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-dashboards-password
            - name: LOGSTASH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: logstash-password
            - name: OPENSEARCH_ENABLE_FIPS_MODE
              value: "false"
            - name: OPENSEARCH_TLS_VERIFICATION_MODE
              value: "full"
            - name: OPENSEARCH_ENABLE_REST_TLS
              value: "true"
            - name: OPENSEARCH_KEYSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/keystore.jks"
            - name: OPENSEARCH_TRUSTSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/truststore.jks"
            - name: OPENSEARCH_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
            - name: OPENSEARCH_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
          ports:
            - name: rest-api
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: rest-api
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /opt/bitnami/scripts/opensearch/healthcheck.sh
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/config
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/plugins
              subPath: app-plugins-dir
            - name: data
              mountPath: /bitnami/opensearch/data
            - name: opensearch-certificates
              mountPath: /opt/bitnami/opensearch/config/certs
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: "data"
          emptyDir: {}
        - name: opensearch-certificates
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: opensearch-coordinating-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: tls.crt
                    - key: tls.key
                      path: tls.key
                    - key: ca.crt
                      path: ca.crt
              - secret:
                  name: opensearch-admin-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: admin.crt
                    - key: tls.key
                      path: admin.key
---
# Source: jaeger-opensearch/charts/opensearch/templates/data/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jaeger-opensearch-data
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: data
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: data
spec:
  replicas: 2
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: data
  serviceName: jaeger-opensearch-data-hl
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: jaeger-opensearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/version: 2.18.0
        helm.sh/chart: opensearch-1.4.0
        app.kubernetes.io/component: data
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: data
      annotations:
    spec:
      serviceAccountName: default
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/os-shell:12-debian-12-r32
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
                      CURRENT=`sysctl -n vm.max_map_count`;
                      DESIRED="262144";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w vm.max_map_count=262144;
                      fi;
                      CURRENT=`sysctl -n fs.file-max`;
                      DESIRED="65536";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w fs.file-max=65536;
                      fi;
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
                    limits:
                      cpu: 150m
                      ephemeral-storage: 2Gi
                      memory: 192Mi
                    requests:
                      cpu: 100m
                      ephemeral-storage: 50Mi
                      memory: 128Mi
        
        - name: copy-default-plugins
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                      - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsGroup: 1001
                    runAsNonRoot: true
                    runAsUser: 1001
                    seLinuxOptions: {}
                    seccompProfile:
                      type: RuntimeDefault
          resources:
                    limits:
                      cpu: 750m
                      ephemeral-storage: 2Gi
                      memory: 1536Mi
                    requests:
                      cpu: 500m
                      ephemeral-storage: 50Mi
                      memory: 1024Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
                . /opt/bitnami/scripts/liblog.sh
                . /opt/bitnami/scripts/libfs.sh
                . /opt/bitnami/scripts/opensearch-env.sh
        
                mkdir -p /emptydir/app-conf-dir /emptydir/app-plugins-dir
                info "Copying directories to empty dir"
        
                if ! is_dir_empty "$DB_DEFAULT_CONF_DIR"; then
                    info "Copying default configuration"
                    cp -nr --preserve=mode "$DB_DEFAULT_CONF_DIR"/* /emptydir/app-conf-dir
                fi
                if ! is_dir_empty "$DB_DEFAULT_PLUGINS_DIR"; then
                    info "Copying default plugins"
                    cp -nr "$DB_DEFAULT_PLUGINS_DIR"/* /emptydir/app-plugins-dir
                fi
        
                info "Copy operation completed"
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
      containers:
        - name: opensearch
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPENSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: OPENSEARCH_NODE_ROLES
              value: "data"
            - name: OPENSEARCH_TRANSPORT_PORT_NUMBER
              value: "9300"
            - name: OPENSEARCH_HTTP_PORT_NUMBER
              value: "9200"
            - name: OPENSEARCH_CLUSTER_NAME
              value: "jaeger"
            - name: OPENSEARCH_CLUSTER_HOSTS
              value: "jaeger-opensearch-master-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-coordinating-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-data-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-ingest-hl.jaeger-opensearch.svc.cluster.local,"
            - name: OPENSEARCH_TOTAL_NODES
              value: "4"
            - name: OPENSEARCH_CLUSTER_MASTER_HOSTS
              value: jaeger-opensearch-master-0 jaeger-opensearch-master-1 
            - name: OPENSEARCH_MINIMUM_MASTER_NODES
              value: "2"
            - name: OPENSEARCH_ADVERTISED_HOSTNAME
              value: "$(MY_POD_NAME).jaeger-opensearch-data-hl.jaeger-opensearch.svc.cluster.local"
            - name: OPENSEARCH_HEAP_SIZE
              value: "1024m"
            
            - name: OPENSEARCH_SECURITY_NODES_DN
              value: CN=jaeger-opensearch-master;CN=jaeger-opensearch-data;CN=jaeger-opensearch-coordinating;CN=jaeger-opensearch-ingest
            - name: OPENSEARCH_SECURITY_ADMIN_DN
              value: CN=admin;CN=admin
            - name: OPENSEARCH_ENABLE_SECURITY
              value: "true"
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-password
            - name: OPENSEARCH_DASHBOARDS_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-dashboards-password
            - name: LOGSTASH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: logstash-password
            - name: OPENSEARCH_ENABLE_FIPS_MODE
              value: "false"
            - name: OPENSEARCH_TLS_VERIFICATION_MODE
              value: "full"
            - name: OPENSEARCH_ENABLE_REST_TLS
              value: "true"
            - name: OPENSEARCH_KEYSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/keystore.jks"
            - name: OPENSEARCH_TRUSTSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/truststore.jks"
            - name: OPENSEARCH_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
            - name: OPENSEARCH_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
          ports:
            - name: rest-api
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: rest-api
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /opt/bitnami/scripts/opensearch/healthcheck.sh
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 1536Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 1024Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/config
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/plugins
              subPath: app-plugins-dir
            - name: data
              mountPath: /bitnami/opensearch/data
            - name: opensearch-certificates
              mountPath: /opt/bitnami/opensearch/config/certs
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: opensearch-certificates
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: opensearch-data-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: tls.crt
                    - key: tls.key
                      path: tls.key
                    - key: ca.crt
                      path: ca.crt
              - secret:
                  name: opensearch-admin-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: admin.crt
                    - key: tls.key
                      path: admin.key
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "data"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: longhorn-static
---
# Source: jaeger-opensearch/charts/opensearch/templates/ingest/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jaeger-opensearch-ingest
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: ingest
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: ingest
spec:
  replicas: 2
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: ingest
  serviceName: jaeger-opensearch-ingest-hl
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: jaeger-opensearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/version: 2.18.0
        helm.sh/chart: opensearch-1.4.0
        app.kubernetes.io/component: ingest
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: ingest
      annotations:
    spec:
      serviceAccountName: default
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/os-shell:12-debian-12-r32
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
                      CURRENT=`sysctl -n vm.max_map_count`;
                      DESIRED="262144";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w vm.max_map_count=262144;
                      fi;
                      CURRENT=`sysctl -n fs.file-max`;
                      DESIRED="65536";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w fs.file-max=65536;
                      fi;
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
                    limits:
                      cpu: 150m
                      ephemeral-storage: 2Gi
                      memory: 192Mi
                    requests:
                      cpu: 100m
                      ephemeral-storage: 50Mi
                      memory: 128Mi
        
        - name: copy-default-plugins
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                      - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsGroup: 1001
                    runAsNonRoot: true
                    runAsUser: 1001
                    seLinuxOptions: {}
                    seccompProfile:
                      type: RuntimeDefault
          resources:
                    limits:
                      cpu: 750m
                      ephemeral-storage: 2Gi
                      memory: 768Mi
                    requests:
                      cpu: 500m
                      ephemeral-storage: 50Mi
                      memory: 512Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
                . /opt/bitnami/scripts/liblog.sh
                . /opt/bitnami/scripts/libfs.sh
                . /opt/bitnami/scripts/opensearch-env.sh
        
                mkdir -p /emptydir/app-conf-dir /emptydir/app-plugins-dir
                info "Copying directories to empty dir"
        
                if ! is_dir_empty "$DB_DEFAULT_CONF_DIR"; then
                    info "Copying default configuration"
                    cp -nr --preserve=mode "$DB_DEFAULT_CONF_DIR"/* /emptydir/app-conf-dir
                fi
                if ! is_dir_empty "$DB_DEFAULT_PLUGINS_DIR"; then
                    info "Copying default plugins"
                    cp -nr "$DB_DEFAULT_PLUGINS_DIR"/* /emptydir/app-plugins-dir
                fi
        
                info "Copy operation completed"
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
      containers:
        - name: opensearch
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPENSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: OPENSEARCH_NODE_ROLES
              value: "ingest"
            - name: OPENSEARCH_TRANSPORT_PORT_NUMBER
              value: "9300"
            - name: OPENSEARCH_HTTP_PORT_NUMBER
              value: "9200"
            - name: OPENSEARCH_CLUSTER_NAME
              value: "jaeger"
            - name: OPENSEARCH_CLUSTER_HOSTS
              value: "jaeger-opensearch-master-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-coordinating-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-data-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-ingest-hl.jaeger-opensearch.svc.cluster.local,"
            - name: OPENSEARCH_TOTAL_NODES
              value: "4"
            - name: OPENSEARCH_CLUSTER_MASTER_HOSTS
              value: jaeger-opensearch-master-0 jaeger-opensearch-master-1 
            - name: OPENSEARCH_MINIMUM_MASTER_NODES
              value: "2"
            - name: OPENSEARCH_ADVERTISED_HOSTNAME
              value: "$(MY_POD_NAME).jaeger-opensearch-ingest-hl.jaeger-opensearch.svc.cluster.local"
            - name: OPENSEARCH_HEAP_SIZE
              value: "128m"
            
            - name: OPENSEARCH_SECURITY_NODES_DN
              value: CN=jaeger-opensearch-master;CN=jaeger-opensearch-data;CN=jaeger-opensearch-coordinating;CN=jaeger-opensearch-ingest
            - name: OPENSEARCH_SECURITY_ADMIN_DN
              value: CN=admin;CN=admin
            - name: OPENSEARCH_ENABLE_SECURITY
              value: "true"
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-password
            - name: OPENSEARCH_DASHBOARDS_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-dashboards-password
            - name: LOGSTASH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: logstash-password
            - name: OPENSEARCH_ENABLE_FIPS_MODE
              value: "false"
            - name: OPENSEARCH_TLS_VERIFICATION_MODE
              value: "full"
            - name: OPENSEARCH_ENABLE_REST_TLS
              value: "true"
            - name: OPENSEARCH_KEYSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/keystore.jks"
            - name: OPENSEARCH_TRUSTSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/truststore.jks"
            - name: OPENSEARCH_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
            - name: OPENSEARCH_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
          ports:
            - name: rest-api
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: rest-api
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /opt/bitnami/scripts/opensearch/healthcheck.sh
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/config
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/plugins
              subPath: app-plugins-dir
            - name: data
              mountPath: /bitnami/opensearch/data
            - name: opensearch-certificates
              mountPath: /opt/bitnami/opensearch/config/certs
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: "data"
          emptyDir: {}
        - name: opensearch-certificates
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: opensearch-ingest-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: tls.crt
                    - key: tls.key
                      path: tls.key
                    - key: ca.crt
                      path: ca.crt
              - secret:
                  name: opensearch-admin-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: admin.crt
                    - key: tls.key
                      path: admin.key
---
# Source: jaeger-opensearch/charts/opensearch/templates/master/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jaeger-opensearch-master
  namespace: "jaeger-opensearch"
  labels:
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/version: 2.18.0
    helm.sh/chart: opensearch-1.4.0
    app.kubernetes.io/component: master
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: master
spec:
  replicas: 2
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/instance: jaeger-opensearch
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/component: master
  serviceName: jaeger-opensearch-master-hl
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: jaeger-opensearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/version: 2.18.0
        helm.sh/chart: opensearch-1.4.0
        app.kubernetes.io/component: master
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: master
      annotations:
    spec:
      serviceAccountName: default
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/os-shell:12-debian-12-r32
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
                      CURRENT=`sysctl -n vm.max_map_count`;
                      DESIRED="262144";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w vm.max_map_count=262144;
                      fi;
                      CURRENT=`sysctl -n fs.file-max`;
                      DESIRED="65536";
                      if [ "$DESIRED" -gt "$CURRENT" ]; then
                          sysctl -w fs.file-max=65536;
                      fi;
          securityContext:
            privileged: true
            runAsUser: 0
          resources:
                    limits:
                      cpu: 150m
                      ephemeral-storage: 2Gi
                      memory: 192Mi
                    requests:
                      cpu: 100m
                      ephemeral-storage: 50Mi
                      memory: 128Mi
        
        - name: copy-default-plugins
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                      - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsGroup: 1001
                    runAsNonRoot: true
                    runAsUser: 1001
                    seLinuxOptions: {}
                    seccompProfile:
                      type: RuntimeDefault
          resources:
                    limits:
                      cpu: 750m
                      ephemeral-storage: 2Gi
                      memory: 768Mi
                    requests:
                      cpu: 500m
                      ephemeral-storage: 50Mi
                      memory: 512Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
                . /opt/bitnami/scripts/liblog.sh
                . /opt/bitnami/scripts/libfs.sh
                . /opt/bitnami/scripts/opensearch-env.sh
        
                mkdir -p /emptydir/app-conf-dir /emptydir/app-plugins-dir
                info "Copying directories to empty dir"
        
                if ! is_dir_empty "$DB_DEFAULT_CONF_DIR"; then
                    info "Copying default configuration"
                    cp -nr --preserve=mode "$DB_DEFAULT_CONF_DIR"/* /emptydir/app-conf-dir
                fi
                if ! is_dir_empty "$DB_DEFAULT_PLUGINS_DIR"; then
                    info "Copying default plugins"
                    cp -nr "$DB_DEFAULT_PLUGINS_DIR"/* /emptydir/app-plugins-dir
                fi
        
                info "Copy operation completed"
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
      containers:
        - name: opensearch
          image: docker.io/bitnami/opensearch:2.18.0-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - bash
            - -ec
            - |
              if [[ "$MY_POD_NAME" =~ -0$ ]]; then
                export OPENSEARCH_SECURITY_BOOTSTRAP=true
                # Opensearch securityadmin.sh requires the admin.key to be in PKCS8 format
                openssl pkcs8 -topk8 -nocrypt -in "/opt/bitnami/opensearch/config/certs/admin.key" > "/opt/bitnami/opensearch/config/admin.key"
                export OPENSEARCH_SECURITY_ADMIN_KEY_LOCATION="/opt/bitnami/opensearch/config/admin.key"
              fi
              /opt/bitnami/scripts/opensearch/entrypoint.sh /opt/bitnami/scripts/opensearch/run.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPENSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: OPENSEARCH_NODE_ROLES
              value: "master"
            - name: OPENSEARCH_TRANSPORT_PORT_NUMBER
              value: "9300"
            - name: OPENSEARCH_HTTP_PORT_NUMBER
              value: "9200"
            - name: OPENSEARCH_CLUSTER_NAME
              value: "jaeger"
            - name: OPENSEARCH_CLUSTER_HOSTS
              value: "jaeger-opensearch-master-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-coordinating-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-data-hl.jaeger-opensearch.svc.cluster.local,jaeger-opensearch-ingest-hl.jaeger-opensearch.svc.cluster.local,"
            - name: OPENSEARCH_TOTAL_NODES
              value: "4"
            - name: OPENSEARCH_CLUSTER_MASTER_HOSTS
              value: jaeger-opensearch-master-0 jaeger-opensearch-master-1 
            - name: OPENSEARCH_MINIMUM_MASTER_NODES
              value: "2"
            - name: OPENSEARCH_ADVERTISED_HOSTNAME
              value: "$(MY_POD_NAME).jaeger-opensearch-master-hl.jaeger-opensearch.svc.cluster.local"
            - name: OPENSEARCH_HEAP_SIZE
              value: "128m"
            
            - name: OPENSEARCH_SECURITY_NODES_DN
              value: CN=jaeger-opensearch-master;CN=jaeger-opensearch-data;CN=jaeger-opensearch-coordinating;CN=jaeger-opensearch-ingest
            - name: OPENSEARCH_SECURITY_ADMIN_DN
              value: CN=admin;CN=admin
            - name: OPENSEARCH_ENABLE_SECURITY
              value: "true"
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-password
            - name: OPENSEARCH_DASHBOARDS_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: opensearch-dashboards-password
            - name: LOGSTASH_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: opensearch-secrets
                    key: logstash-password
            - name: OPENSEARCH_ENABLE_FIPS_MODE
              value: "false"
            - name: OPENSEARCH_TLS_VERIFICATION_MODE
              value: "full"
            - name: OPENSEARCH_ENABLE_REST_TLS
              value: "true"
            - name: OPENSEARCH_KEYSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/keystore.jks"
            - name: OPENSEARCH_TRUSTSTORE_LOCATION
              value: "/opt/bitnami/opensearch/config/certs/truststore.jks"
            - name: OPENSEARCH_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
            - name: OPENSEARCH_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-secrets
                  key: "storepass"
          ports:
            - name: rest-api
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: rest-api
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /opt/bitnami/scripts/opensearch/healthcheck.sh
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 2Gi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/config
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /opt/bitnami/opensearch/plugins
              subPath: app-plugins-dir
            - name: data
              mountPath: /bitnami/opensearch/data
            - name: opensearch-certificates
              mountPath: /opt/bitnami/opensearch/config/certs
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: opensearch-certificates
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: opensearch-master-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: tls.crt
                    - key: tls.key
                      path: tls.key
                    - key: ca.crt
                      path: ca.crt
              - secret:
                  name: opensearch-admin-tls-keypair
                  items:
                    
                    - key: tls.crt
                      path: admin.crt
                    - key: tls.key
                      path: admin.key
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "data"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: longhorn-static
---
# Source: jaeger-opensearch/charts/opensearch-dashboards/templates/serviceMonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: opensearch-dashboard-service-monitor
  namespace: jaeger-opensearch
  labels:
    helm.sh/chart: opensearch-dashboards-2.25.0
    app.kubernetes.io/name: opensearch-dashboards
    app.kubernetes.io/instance: jaeger-opensearch
    app.kubernetes.io/version: "2.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch-dashboards
      app.kubernetes.io/instance: jaeger-opensearch
  endpoints:
  - port: metrics
    interval: 10s
    path: /_prometheus/metrics
