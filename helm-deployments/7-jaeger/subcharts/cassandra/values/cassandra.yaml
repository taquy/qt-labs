cassandra:
  enabled: true
  nameOverride: ""
  fullnameOverride: ""
  image:
    registry: docker.io
    repository: bitnami/cassandra
    tag: 5.0.2-debian-12-r3
  dbUser:
    user: cassandra
    forcePassword: true
    # password: "root1234"
    existingSecret: "cassandra-secrets"
  existingConfiguration: ""
  cluster:
    name: cassandra
    seedCount: 1
    numTokens: 256
    datacenter: dc1
    rack: rack1
    endpointSnitch: SimpleSnitch
    clientEncryption: false
    extraSeeds: []
    enableUDF: false
  ## JVM Settings
  ## @param jvm.extraOpts Set the value for Java Virtual Machine extra options
  ## @param jvm.maxHeapSize Set Java Virtual Machine maximum heap size (MAX_HEAP_SIZE). Calculated automatically if `nil`
  ## @param jvm.newHeapSize Set Java Virtual Machine new heap size (HEAP_NEWSIZE). Calculated automatically if `nil`
  ##
  jvm:
    extraOpts: ""
    ## Memory settings: These are calculated automatically unless specified otherwise
    ## To run on environments with little resources (<= 8GB), tune your heap settings:
    ## - calculate 1/2 ram and cap to 1024MB
    ## - calculate 1/4 ram and cap to 8192MB
    ## - pick the max
    ##
    maxHeapSize: ""
    ## newHeapSize:
    ## A good guideline is 100 MB per CPU core.
    ## - min(100 * num_cores, 1/4 * heap size)
    ## ref: https://docs.datastax.com/en/archived/cassandra/2.0/cassandra/operations/ops_tune_jvm_c.html
    ##
    newHeapSize: ""
  ## @param command Command for running the container (set to default if not set). Use array form
  ##
  command: []
  ## @param args Args for running the container (set to default if not set). Use array form
  ##
  args: []
  ## @param extraEnvVars Extra environment variables to be set on cassandra container
  ## For example:
  ##  - name: FOO
  ##    value: BAR
  ##
  extraEnvVars: []
  ## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @section Statefulset parameters
  ##

  ## @param replicaCount Number of Cassandra replicas
  ##
  replicaCount: 1
  ## @param updateStrategy.type updateStrategy for Cassandra statefulset
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
  automountServiceAccountToken: false
  podManagementPolicy: OrderedReady
  resourcesPreset: "large"
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  hostNetwork: false
  containerPorts:
    intra: 7000
    tls: 7001
    jmx: 7199
    cql: 9042
  ## Cassandra ports to be exposed as hostPort
  ## If hostNetwork is false, only the ports specified here will be exposed (or not if set to an empty string)
  ## @param hostPorts.intra Intra Port on the Host
  ## @param hostPorts.tls TLS Port on the Host
  ## @param hostPorts.jmx JMX Port on the Host
  ## @param hostPorts.cql CQL Port on the Host
  ##
  hostPorts:
    intra: ""
    tls: ""
    jmx: ""
    cql: ""
  serviceAccount:
    create: true
  service:
    type: ClusterIP
    ports:
      cql: 9042
      metrics: 8080
  persistence:
    enabled: true
    storageClass: "longhorn-static"
    commitStorageClass: "longhorn-static"
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    commitLogsize: 2Gi
    mountPath: /bitnami/cassandra
 
  metrics:
    enabled: true
    image:
      repository: bitnami/cassandra-exporter
    resourcesPreset: "nano"
    serviceMonitor:
      enabled: true
      namespace: jaeger
    containerPorts:
      http: 8080
      jmx: 5555
   
  tls:
    internodeEncryption: none
    clientEncryption: false
    autoGenerated: true
    existingSecret: ""
    passwordsSecret: ""
    keystorePassword: ""
    truststorePassword: ""
    certificatesSecret: ""
    tlsEncryptionSecretName: ""
    resourcesPreset: "nano"
    resources: {}
