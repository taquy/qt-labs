zipkin: 
  enabled: false

  nameOverride: ""
  fullnameOverride: ""
  configOverrides: {}
  secretConfigOverrides: {}
  existingConfigmap: ""
  existingSecret: ""
  javaOpts: ""
  image:
    registry: docker.io
    repository: bitnami/zipkin
    tag: 3.4.3-debian-12-r0
  replicaCount: 1
  containerPorts:
    http: 9411
  usePasswordFile: true
  storageType: cassandra3
  ## TLS/SSL parameters
  ## @param tls.enabled Enable TLS
  ## @param tls.usePemCerts Use certificates in .pem format
  ## @param tls.existingSecret Name of a secret containing the certificate files
  ## @param tls.certFilename Filename inside the secret of the .crt file (when usePemCerts=true)
  ## @param tls.certKeyFilename Filename inside the secret of the .key file (when usePemCerts=true)
  ## @param tls.keystoreFilename Filename inside the secret of the .jks file (when usePemCerts=false)
  ## @param tls.password Password of the Java keystore
  ## @param tls.passwordSecret Name of a secret containing the password of the Java keystore
  ##
  tls:
    enabled: false
    usePemCerts: true
    passwordSecret: "zipkin-secrets"
    existingSecret: "zipkin-tls-keypair"
    certFilename: tls.crt
    certKeyFilename: tls.key
    keystoreFilename: keystore.jks
    autoGenerated:
      enabled: false
      engine: false
  resourcesPreset: "small"

  service:
    type: LoadBalancer
    ports:
      http: 9411
    nodePorts:
      http: ""

  defaultInitContainers:
    waitForCassandra:
      enabled: false
    initCerts:
      enabled: true
      resourcesPreset: "nano"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  externalDatabase:
    host: "jaeger-cassandra"
    port: 9042
    user: cassandra
    existingSecret: "cassandra-secrets"
    existingSecretPasswordKey: "cassandra-password"
    cluster:
      datacenter: "dc1"
    keyspace: "zipkin"
  cassandra:
    enabled: false
