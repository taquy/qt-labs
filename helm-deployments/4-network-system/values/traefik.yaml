traefik:
  enabled: false
  deployment:
    enabled: true
    kind: Deployment
    replicas: 3
  ingressClass:  # @schema additionalProperties: false
    enabled: true
    isDefaultClass: true
  experimental:
    kubernetesGateway:
      enabled: true
  gateway:
    # -- When providers.kubernetesGateway.enabled, deploy a default gateway
    enabled: true
    listeners:
      web:
        port: 8000
        hostname: "traefik.q.t"
  gatewayClass:  # @schema additionalProperties: false
    enabled: true
  ingressRoute:
    dashboard:
      enabled: true
      matchRule: Host(`traefik.q.t`)
      services:
        - name: api@internal
          kind: TraefikService
      entryPoints: ["web"]
  providers:  # @schema additionalProperties: false
    kubernetesCRD:
      # -- Load Kubernetes IngressRoute provider
      enabled: true
      # -- Allows IngressRoute to reference resources in namespace other than theirs
      allowCrossNamespace: true
      # -- Allows to reference ExternalName services in IngressRoute
      allowExternalNameServices: true
      # -- Allows to return 503 when there is no endpoints available
      allowEmptyServices: true
      # -- When the parameter is set, only resources containing an annotation with the same value are processed. Otherwise, resources missing the annotation, having an empty value, or the value traefik are processed. It will also set required annotation on Dashboard and Healthcheck IngressRoute when enabled.
      ingressClass: ""
      # labelSelector: environment=production,method=traefik
      # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.
      namespaces: []
      # -- Defines whether to use Native Kubernetes load-balancing mode by default.
      nativeLBByDefault: false

    kubernetesIngress:
      enabled: true
      allowExternalNameServices: true
      allowEmptyServices: true
      publishedService:
        enabled: true

    kubernetesGateway:
      enabled: false
    file:
      enabled: false
      watch: true
      content: ""
  ports:
    traefik:
      port: 8080
      expose:
        default: true
      exposedPort: 8080
      protocol: TCP
    web:
      asDefault: true
      port: 8000
      expose:
        default: true
      exposedPort: 80
    opensearch-9200:
      port: 9200
      expose:
        default: true
      exposedPort: 9200
    opensearch-9300:
      port: 9300
      expose:
        default: true
      exposedPort: 9300
    opensearch-5601:
      port: 5601
      expose:
        default: true
      exposedPort: 5601
    websecure:
      port: 8443
      expose:
        default: true
      exposedPort: 443
  service:
    enabled: true
    single: false
    type: LoadBalancer
   
  autoscaling:
    enabled: false

  persistence:
    enabled: false
    name: data
    accessMode: ReadWriteOnce
    size: 128Mi
    storageClass: ""
  # -- Certificates resolvers configuration.
  # Ref: https://doc.traefik.io/traefik/https/acme/#certificate-resolvers
  # See EXAMPLES.md for more details.
  certificatesResolvers: {}
 
  # Traefik Hub configuration. See https://doc.traefik.io/traefik-hub/
  hub:
    # -- Name of `Secret` with key 'token' set to a valid license token.
    # It enables API Gateway.
    token: ""
    redis:
      # -- Enable Redis Cluster. Default: true.
      cluster:    # @schema type:[boolean, null]
      # -- Database used to store information. Default: "0".
      database:   # @schema type:[string, null]
      endpoints: ""
      username: ""
      password: ""
      sentinel:
        # -- Name of the set of main nodes to use for main selection. Required when using Sentinel. Default: "".
        masterset: ""
        username: ""
        password: ""
